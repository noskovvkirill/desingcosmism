{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kirill/Desktop/DESIGN3D/components/baby.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as THREE from \"three\";\nimport React from 'react';\nimport { useRef, Suspense, useState } from 'react';\nimport { useThree, useFrame } from \"react-three-fiber\";\nimport { useFBX } from '@react-three/drei/useFBX';\nimport { Bloom } from '@react-three/postprocessing';\nimport { useRouter } from 'next/router';\nimport { OneFBX } from '../components/one';\n\nconst TwoFBX = () => {\n  const router = useRouter();\n  const mesh = useRef();\n  let fbx = useFBX('/models/2.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree(); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n\n  const handleClick = () => {\n    router.push('/one');\n  };\n\n  useFrame(() => {\n    if (hovered) {\n      // mesh.current.rotation.x += 0.01\n      mesh.current.rotation.y += 0.1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n    onClick: handleClick\n  }, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [6, 0, 6],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    onClick: e => setActive(!active),\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\nconst ThreeFBX = () => {\n  const router = useRouter();\n  const mesh = useRef();\n  let fbx = useFBX('/models/3.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree();\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n\n  const handleClick = () => {\n    router.push('/one');\n  };\n\n  useFrame(() => {\n    if (hovered) {\n      // mesh.current.rotation.x += 0.01\n      mesh.current.rotation.y += 0.1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [12, 0, 8],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    onClick: handleClick,\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\nconst FourFBX = () => {\n  const router = useRouter();\n  const mesh = useRef();\n  let fbx = useFBX('/models/4.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree();\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n\n  const handleClick = () => {\n    router.push('/one');\n  };\n\n  useFrame(() => {\n    if (hovered) {\n      // mesh.current.rotation.x += 0.01\n      mesh.current.rotation.y += 0.1;\n    }\n  }); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [0, 4, 4],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    rotation: [0, 0, 0],\n    onClick: handleClick,\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\nconst FiveFBX = () => {\n  const router = useRouter();\n  const mesh = useRef();\n  let fbx = useFBX('/models/5.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree();\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n\n  const handleClick = () => {\n    router.push('/one');\n  };\n\n  useFrame(() => {\n    if (hovered) {\n      // mesh.current.rotation.x += 0.01\n      mesh.current.rotation.y += 0.1;\n    }\n  }); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [-12, 0, 8],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    rotation: [0, 0, 0],\n    onClick: handleClick,\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n\nconst SixFBX = () => {\n  const router = useRouter();\n  const mesh = useRef();\n  let fbx = useFBX('/models/6.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree();\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n\n  const handleClick = () => {\n    router.push('/one');\n  };\n\n  useFrame(() => {\n    if (hovered) {\n      // mesh.current.rotation.x += 0.01\n      mesh.current.rotation.y += 0.1;\n    }\n  }); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [-6, 0, 6],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    rotation: [20, 20, 0],\n    onClick: handleClick,\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n};\n\nconst UseFBXScene = () => {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OneFBX, {\n      onClick: () => {\n        alert('push');\n        router.push('/');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TwoFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ThreeFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FourFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FiveFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SixFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\nexport default UseFBXScene;","map":{"version":3,"sources":["/Users/kirill/Desktop/DESIGN3D/components/baby.js"],"names":["THREE","React","useRef","Suspense","useState","useThree","useFrame","useFBX","Bloom","useRouter","OneFBX","TwoFBX","router","mesh","fbx","gl","canvas","hovered","setHover","active","setActive","handleClick","push","current","rotation","y","children","e","ThreeFBX","FourFBX","FiveFBX","SixFBX","UseFBXScene","alert"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAkC,mBAAlC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,KAAT,QAAsB,6BAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAQC,MAAR,QAAqB,mBAArB;;AAIE,MAAMC,MAAM,GAAG,MAAM;AAEnB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,IAAI,GAAGX,MAAM,EAAnB;AACA,MAAIY,GAAG,GAAGP,MAAM,CAAC,eAAD,CAAhB;AACA,QAAM;AACJQ,IAAAA,EADI;AAEJC,IAAAA;AAFI,MAGFX,QAAQ,EAHZ,CALmB,CAUnB;;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACe,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMiB,WAAW,GAAG,MAAM;AACxBT,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ;AACD,GAFD;;AAKAhB,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAGW,OAAH,EAAW;AAET;AACAJ,MAAAA,IAAI,CAACU,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,GAA3B;AACD;AACF,GANO,CAAR;AAQE,sBAGE;AACA,IAAA,OAAO,EAAEJ;AADT,KAEIP,GAAG,CAACY,QAAJ,CAAa,CAAb,CAFJ;AAGA,IAAA,GAAG,EAAEb,IAHL;AAIA,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJV;AAKA,IAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CALP;AAMA,IAAA,IAAI,EAAC,UANL;AAOA,IAAA,OAAO,EAAEc,CAAC,IAAIP,SAAS,CAAC,CAACD,MAAF,CAPvB;AAQA,IAAA,aAAa,EAAEQ,CAAC,IAAIT,QAAQ,CAAC,IAAD,CAR5B;AASA,IAAA,YAAY,EAAES,CAAC,IAAIT,QAAQ,CAAC,KAAD;AAT3B;AAAA;AAAA;AAAA;AAAA,UAHF;AAkBH,CA7CD;;AA+CA,MAAMU,QAAQ,GAAG,MAAM;AACrB,QAAMhB,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,IAAI,GAAGX,MAAM,EAAnB;AACA,MAAIY,GAAG,GAAGP,MAAM,CAAC,eAAD,CAAhB;AACA,QAAM;AACJQ,IAAAA,EADI;AAEJC,IAAAA;AAFI,MAGFX,QAAQ,EAHZ;AAKA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACe,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMiB,WAAW,GAAG,MAAM;AACxBT,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ;AACD,GAFD;;AAIAhB,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAGW,OAAH,EAAW;AAET;AACAJ,MAAAA,IAAI,CAACU,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,GAA3B;AACD;AACF,GANO,CAAR;AASE,sBACE,gDACIX,GAAG,CAACY,QAAJ,CAAa,CAAb,CADJ;AAEA,IAAA,GAAG,EAAEb,IAFL;AAGA,IAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAHV;AAIA,IAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAJP;AAKA,IAAA,IAAI,EAAC,UALL;AAMA,IAAA,OAAO,EAAEQ,WANT;AAOA,IAAA,aAAa,EAAEM,CAAC,IAAIT,QAAQ,CAAC,IAAD,CAP5B;AAQA,IAAA,YAAY,EAAES,CAAC,IAAIT,QAAQ,CAAC,KAAD;AAR3B;AAAA;AAAA;AAAA;AAAA,UADF;AAcH,CAvCD;;AAyCA,MAAMW,OAAO,GAAG,MAAM;AACpB,QAAMjB,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,IAAI,GAAGX,MAAM,EAAnB;AACA,MAAIY,GAAG,GAAGP,MAAM,CAAC,eAAD,CAAhB;AACA,QAAM;AACJQ,IAAAA,EADI;AAEJC,IAAAA;AAFI,MAGFX,QAAQ,EAHZ;AAKA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACe,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMiB,WAAW,GAAG,MAAM;AAExBT,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ;AACD,GAHD;;AAMAhB,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAGW,OAAH,EAAW;AAET;AACAJ,MAAAA,IAAI,CAACU,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,GAA3B;AACD;AACF,GANO,CAAR,CAlBoB,CA0BpB;;AACE,sBACE,gDACIX,GAAG,CAACY,QAAJ,CAAa,CAAb,CADJ;AAEA,IAAA,GAAG,EAAEb,IAFL;AAGA,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHV;AAIA,IAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAJP;AAKA,IAAA,IAAI,EAAC,UALL;AAMA,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANV;AAOA,IAAA,OAAO,EAAEQ,WAPT;AAQA,IAAA,aAAa,EAAEM,CAAC,IAAIT,QAAQ,CAAC,IAAD,CAR5B;AASA,IAAA,YAAY,EAAES,CAAC,IAAIT,QAAQ,CAAC,KAAD;AAT3B;AAAA;AAAA;AAAA;AAAA,UADF;AAeH,CA1CD;;AA4CA,MAAMY,OAAO,GAAG,MAAM;AACpB,QAAMlB,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,IAAI,GAAGX,MAAM,EAAnB;AACA,MAAIY,GAAG,GAAGP,MAAM,CAAC,eAAD,CAAhB;AACA,QAAM;AACJQ,IAAAA,EADI;AAEJC,IAAAA;AAFI,MAGFX,QAAQ,EAHZ;AAKA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACe,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMiB,WAAW,GAAG,MAAM;AACxBT,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ;AACD,GAFD;;AAKAhB,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAGW,OAAH,EAAW;AAET;AACAJ,MAAAA,IAAI,CAACU,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,GAA3B;AACD;AACF,GANO,CAAR,CAjBoB,CAyBpB;;AAEE,sBACE,gDACIX,GAAG,CAACY,QAAJ,CAAa,CAAb,CADJ;AAEA,IAAA,GAAG,EAAEb,IAFL;AAGA,IAAA,QAAQ,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,CAAT,CAHV;AAIA,IAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAJP;AAKA,IAAA,IAAI,EAAC,UALL;AAMA,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANV;AAOA,IAAA,OAAO,EAAEQ,WAPT;AAQA,IAAA,aAAa,EAAEM,CAAC,IAAIT,QAAQ,CAAC,IAAD,CAR5B;AASA,IAAA,YAAY,EAAES,CAAC,IAAIT,QAAQ,CAAC,KAAD;AAT3B;AAAA;AAAA;AAAA;AAAA,UADF;AAeH,CA1CD;;AA4CA,MAAMa,MAAM,GAAG,MAAM;AACnB,QAAMnB,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,IAAI,GAAGX,MAAM,EAAnB;AACA,MAAIY,GAAG,GAAGP,MAAM,CAAC,eAAD,CAAhB;AACA,QAAM;AACJQ,IAAAA,EADI;AAEJC,IAAAA;AAFI,MAGFX,QAAQ,EAHZ;AAKA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACe,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMiB,WAAW,GAAG,MAAM;AACxBT,IAAAA,MAAM,CAACU,IAAP,CAAY,MAAZ;AACD,GAFD;;AAKAhB,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAGW,OAAH,EAAW;AAET;AACAJ,MAAAA,IAAI,CAACU,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,GAA3B;AACD;AACF,GANO,CAAR,CAjBmB,CAyBnB;;AAEE,sBACE,gDACIX,GAAG,CAACY,QAAJ,CAAa,CAAb,CADJ;AAEA,IAAA,GAAG,EAAEb,IAFL;AAGA,IAAA,QAAQ,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAHV;AAIA,IAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAJP;AAKA,IAAA,IAAI,EAAC,UALL;AAMA,IAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,CANV;AAOA,IAAA,OAAO,EAAEQ,WAPT;AAQA,IAAA,aAAa,EAAEM,CAAC,IAAIT,QAAQ,CAAC,IAAD,CAR5B;AASA,IAAA,YAAY,EAAES,CAAC,IAAIT,QAAQ,CAAC,KAAD;AAT3B;AAAA;AAAA;AAAA;AAAA,UADF;AAeH,CA1CD;;AA4CA,MAAMc,WAAW,GAAG,MAAM;AAExB,QAAMpB,MAAM,GAAGH,SAAS,EAAxB;AAEA,sBACE;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACwB,QAAAA,KAAK,CAAC,MAAD,CAAL;AAAerB,QAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AAAiB;AAAtD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADF;AAUD,CAdD;;AAgBA,eAAeU,WAAf","sourcesContent":["import * as THREE from \"three\"\nimport React from 'react'\nimport { useRef, Suspense, useState} from 'react'\nimport { useThree, useFrame} from \"react-three-fiber\"\nimport { useFBX } from '@react-three/drei/useFBX'\nimport { Bloom } from '@react-three/postprocessing'\nimport { useRouter } from 'next/router'\nimport {OneFBX} from '../components/one'\n\n\n\n  const TwoFBX = () => {\n  \n    const router = useRouter()\n    const mesh = useRef()\n    let fbx = useFBX('/models/2.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    const handleClick = () => {\n      router.push('/one')\n    }\n\n\n    useFrame(() => {\n      if(hovered){\n     \n        // mesh.current.rotation.x += 0.01\n        mesh.current.rotation.y += 0.1\n      }\n    })\n\n      return (\n   \n\n        <mesh\n        onClick={handleClick}\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[6, 0, 6]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        onClick={e => setActive(!active)}\n        onPointerOver={e => setHover(true)}\n        onPointerOut={e => setHover(false)}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n\n      )\n  }\n\n  const ThreeFBX = () => {\n    const router = useRouter()\n    const mesh = useRef()\n    let fbx = useFBX('/models/3.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    const handleClick = () => {\n      router.push('/one')\n    }\n\n    useFrame(() => {\n      if(hovered){\n     \n        // mesh.current.rotation.x += 0.01\n        mesh.current.rotation.y += 0.1\n      }\n    })\n\n\n      return (\n        <mesh\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[12, 0, 8]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        onClick={handleClick}\n        onPointerOver={e => setHover(true)}\n        onPointerOut={e => setHover(false)}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      )\n  }\n\n  const FourFBX = () => {\n    const router = useRouter()\n    const mesh = useRef()\n    let fbx = useFBX('/models/4.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    const handleClick = () => {\n     \n      router.push('/one')\n    }\n\n\n    useFrame(() => {\n      if(hovered){\n     \n        // mesh.current.rotation.x += 0.01\n        mesh.current.rotation.y += 0.1\n      }\n    })\n\n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n      return (\n        <mesh\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[0, 4, 4]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        rotation={[0, 0, 0]}\n        onClick={handleClick}\n        onPointerOver={e => setHover(true)}\n        onPointerOut={e => setHover(false)}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      )\n  }\n\n  const FiveFBX = () => {\n    const router = useRouter()\n    const mesh = useRef()\n    let fbx = useFBX('/models/5.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    const handleClick = () => {\n      router.push('/one')\n    }\n\n\n    useFrame(() => {\n      if(hovered){\n     \n        // mesh.current.rotation.x += 0.01\n        mesh.current.rotation.y += 0.1\n      }\n    })\n\n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n      return (\n        <mesh\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[-12, 0, 8]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        rotation={[0, 0, 0]}\n        onClick={handleClick}\n        onPointerOver={e => setHover(true)}\n        onPointerOut={e => setHover(false)}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      )\n  }\n\n  const SixFBX = () => {\n    const router = useRouter()\n    const mesh = useRef()\n    let fbx = useFBX('/models/6.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    const handleClick = () => {\n      router.push('/one')\n    }\n\n\n    useFrame(() => {\n      if(hovered){\n     \n        // mesh.current.rotation.x += 0.01\n        mesh.current.rotation.y += 0.1\n      }\n    })\n\n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n      return (\n        <mesh\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[-6, 0, 6]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        rotation={[20, 20, 0]}\n        onClick={handleClick}\n        onPointerOver={e => setHover(true)}\n        onPointerOut={e => setHover(false)}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      )\n  }\n  \n  const UseFBXScene = () => {\n\n    const router = useRouter()\n\n    return (\n      <>\n          <OneFBX onClick={()=>{alert('push'); router.push('/')}} />\n          <TwoFBX/>\n          <ThreeFBX/>\n          <FourFBX/>\n          <FiveFBX/>\n          <SixFBX/>\n        </>\n    )\n  }\n\n  export default UseFBXScene "]},"metadata":{},"sourceType":"module"}