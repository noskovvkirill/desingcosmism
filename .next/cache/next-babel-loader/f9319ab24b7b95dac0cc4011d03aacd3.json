{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kirill/Desktop/DESIGN3D/components/baby.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as THREE from \"three\";\nimport React from 'react';\nimport { useRef, Suspense, useState } from 'react';\nimport { useThree, useFrame } from \"react-three-fiber\";\nimport { useFBX } from '@react-three/drei/useFBX';\nimport { Bloom } from '@react-three/postprocessing';\n\nconst OneFBX = () => {\n  const mesh = useRef();\n  let fbx = useFBX('/models/1.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree();\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  useFrame(() => {\n    if (hovered) {\n      mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [0, 0, 0],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    rotation: [0, 0, 0],\n    onClick: e => setActive(!active),\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\nconst TwoFBX = () => {\n  const mesh = useRef();\n  let fbx = useFBX('/models/2.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree(); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  useFrame(() => {\n    if (hovered) {\n      // mesh.current.rotation.x += 0.01\n      mesh.current.rotation.y += 0.1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Bloom, {\n      luminanceThreshold: `${hovered ? 2.0 : 1.0}`,\n      luminanceSmoothing: 0.5,\n      height: 800\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({\n      onClick: () => {\n        alert('yo');\n      }\n    }, fbx.children[0]), {}, {\n      ref: mesh,\n      position: [6, 0, 2],\n      scale: [0.1, 0.1, 0.1],\n      name: \"Object_0\",\n      onClick: e => setActive(!active),\n      onPointerOver: e => setHover(true),\n      onPointerOut: e => setHover(false)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nconst ThreeFBX = () => {\n  const mesh = useRef();\n  let fbx = useFBX('/models/3.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree(); //  useFrame(() => {\n  //    mesh.current.rotation.x = mesh.current.rotation.y += 0.1\n  //    console.log(mesh.current.rotation)\n  //  })\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [12, 0, 4],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\"\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\nconst FourFBX = () => {\n  const mesh = useRef();\n  let fbx = useFBX('/models/4.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree(); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [0, 0, 6],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    rotation: [0, 0, 0]\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\nconst FiveFBX = () => {\n  const mesh = useRef();\n  let fbx = useFBX('/models/5.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree(); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [-12, 0, 4],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    rotation: [0, 0, 0]\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n\nconst SixFBX = () => {\n  const mesh = useRef();\n  let fbx = useFBX('/models/6.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree(); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [-6, 0, 2],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    rotation: [20, 20, 0]\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n\nconst UseFBXScene = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OneFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TwoFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ThreeFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FourFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FiveFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(SixFBX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\nexport default /*#__PURE__*/React.memo(UseFBXScene);","map":{"version":3,"sources":["/Users/kirill/Desktop/DESIGN3D/components/baby.js"],"names":["THREE","React","useRef","Suspense","useState","useThree","useFrame","useFBX","Bloom","OneFBX","mesh","fbx","gl","canvas","hovered","setHover","active","setActive","current","rotation","x","y","children","e","TwoFBX","alert","ThreeFBX","FourFBX","FiveFBX","SixFBX","UseFBXScene","memo"],"mappings":"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","sourcesContent":["import * as THREE from \"three\"\nimport React from 'react'\nimport { useRef, Suspense, useState} from 'react'\nimport { useThree, useFrame} from \"react-three-fiber\"\nimport { useFBX } from '@react-three/drei/useFBX'\nimport { Bloom } from '@react-three/postprocessing'\n\n\n\nconst OneFBX = () => {\n  \n    const mesh = useRef()\n    let fbx = useFBX('/models/1.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    useFrame(() => {\n      if(hovered){\n        mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n      }\n    })\n\n\n      return (\n        <mesh\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[0, 0, 0]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        rotation={[0, 0, 0]}\n        onClick={e => setActive(!active)}\n        onPointerOver={e => setHover(true)}\n        onPointerOut={e => setHover(false)}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      )\n  }\n  const TwoFBX = () => {\n  \n    \n    const mesh = useRef()\n    let fbx = useFBX('/models/2.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    useFrame(() => {\n      if(hovered){\n        // mesh.current.rotation.x += 0.01\n        mesh.current.rotation.y += 0.1\n      }\n    })\n\n      return (\n        <>\n        <Bloom luminanceThreshold={`${hovered ? 2.0 : 1.0}`} luminanceSmoothing={0.5} height={800} />\n\n        <mesh\n        onClick={()=>{alert('yo')}}\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[6, 0, 2]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        onClick={e => setActive(!active)}\n        onPointerOver={e => setHover(true)}\n        onPointerOut={e => setHover(false)}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      </>\n      )\n  }\n\n  const ThreeFBX = () => {\n  \n    const mesh = useRef()\n    let fbx = useFBX('/models/3.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    //  useFrame(() => {\n    //    mesh.current.rotation.x = mesh.current.rotation.y += 0.1\n    //    console.log(mesh.current.rotation)\n    //  })\n\n      return (\n        <mesh\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[12, 0, 4]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        \n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      )\n  }\n\n  const FourFBX = () => {\n  \n    const mesh = useRef()\n    let fbx = useFBX('/models/4.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n   \n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n      return (\n        <mesh\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[0, 0, 6]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        rotation={[0, 0, 0]}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      )\n  }\n\n  const FiveFBX = () => {\n  \n    const mesh = useRef()\n    let fbx = useFBX('/models/5.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n      return (\n        <mesh\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[-12, 0, 4]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        rotation={[0, 0, 0]}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      )\n  }\n\n  const SixFBX = () => {\n  \n    const mesh = useRef()\n    let fbx = useFBX('/models/6.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n      return (\n        <mesh\n        {...fbx.children[0]}\n        ref={mesh}\n        position={[-6, 0, 2]}\n        scale={[0.1,0.1,0.1]}\n        name=\"Object_0\"\n        rotation={[20, 20, 0]}\n      >\n            {/* <meshBasicMaterial  attach=\"material\" map={texture}/>   */}\n      </mesh>\n      )\n  }\n  \n  const UseFBXScene = () => {\n    return (\n      <>\n          <OneFBX/>\n          <TwoFBX/>\n          <ThreeFBX/>\n          <FourFBX/>\n          <FiveFBX/>\n          <SixFBX/>\n        </>\n    )\n  }\n\n  export default React.memo(UseFBXScene)"]},"metadata":{},"sourceType":"module"}