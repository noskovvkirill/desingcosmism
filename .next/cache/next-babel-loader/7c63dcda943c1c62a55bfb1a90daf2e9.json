{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kirill/Desktop/DESIGN3D/components/one.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useRef, Suspense, useState } from 'react';\nimport { useThree, useFrame } from \"react-three-fiber\";\nimport { useFBX } from '@react-three/drei/useFBX';\n\nconst FBX = ({\n  click\n}) => {\n  const mesh = useRef();\n  let fbx = useFBX('/models/1.fbx');\n  const {\n    gl,\n    canvas\n  } = useThree();\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  useFrame(() => {\n    if (hovered) {\n      // mesh.current.rotation.x += 0.01\n      mesh.current.rotation.y += 0.1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", _objectSpread(_objectSpread({}, fbx.children[0]), {}, {\n    ref: mesh,\n    position: [0, 0, 6],\n    scale: [0.1, 0.1, 0.1],\n    name: \"Object_0\",\n    rotation: [0, 0, 0],\n    onClick: e => click(),\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }, this);\n};\n\nconst Scene = ({\n  clickOne\n}) => {\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    callback: false,\n    children: /*#__PURE__*/_jsxDEV(FBX, {\n      click: clickOne\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n};\n\nconst One = (clickOne = {\n  clickOne\n}) => {\n  /*#__PURE__*/\n  _jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(Camera, {\n      position: [0, 0, 15]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 1.0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [40, 40, 40]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: /*#__PURE__*/_jsxDEV(Scene, {\n        clickOne: clickOne\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\nexport default One;","map":{"version":3,"sources":["/Users/kirill/Desktop/DESIGN3D/components/one.js"],"names":["React","useRef","Suspense","useState","useThree","useFrame","useFBX","FBX","click","mesh","fbx","gl","canvas","hovered","setHover","active","setActive","current","rotation","y","children","e","Scene","clickOne","One"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAkC,mBAAlC;AACA,SAASC,MAAT,QAAuB,0BAAvB;;AAIA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAGrB,QAAMC,IAAI,GAAGR,MAAM,EAAnB;AACA,MAAIS,GAAG,GAAGJ,MAAM,CAAC,eAAD,CAAhB;AACA,QAAM;AACJK,IAAAA,EADI;AAEJC,IAAAA;AAFI,MAGFR,QAAQ,EAHZ;AAKA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACY,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEAE,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAGQ,OAAH,EAAW;AAET;AACAJ,MAAAA,IAAI,CAACQ,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,GAA3B;AACD;AACF,GANO,CAAR;AAWE,sBAEI,gDACIT,GAAG,CAACU,QAAJ,CAAa,CAAb,CADJ;AAEA,IAAA,GAAG,EAAEX,IAFL;AAGA,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHV;AAIA,IAAA,KAAK,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CAJP;AAKA,IAAA,IAAI,EAAC,UALL;AAMA,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANV;AAOA,IAAA,OAAO,EAAEY,CAAC,IAAEb,KAAK,EAPjB;AAQA,IAAA,aAAa,EAAEa,CAAC,IAAIP,QAAQ,CAAC,IAAD,CAR5B;AASA,IAAA,YAAY,EAAEO,CAAC,IAAIP,QAAQ,CAAC,KAAD;AAT3B;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBH,CAxCH;;AA4CE,MAAMQ,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAE5B,sBACE,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,KAApB;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;AASA,MAAMC,GAAG,GAAG,CAACD,QAAQ,GAAC;AAACA,EAAAA;AAAD,CAAV,KAAwB;AAClC;AAAA,UAAC,MAAD;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP;AAAlB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAc,MAAA,SAAS,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAY,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,IAApB;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQD,CATD;;AAWA,eAAeC,GAAf","sourcesContent":["import React from 'react'\nimport { useRef, Suspense, useState} from 'react'\nimport { useThree, useFrame} from \"react-three-fiber\"\nimport { useFBX } from '@react-three/drei/useFBX'\n\n\n\nconst FBX = ({click}) => {\n\n  \n    const mesh = useRef()\n    let fbx = useFBX('/models/1.fbx')\n    const { \n      gl,             \n      canvas,              \n    } = useThree()\n\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    useFrame(() => {\n      if(hovered){\n     \n        // mesh.current.rotation.x += 0.01\n        mesh.current.rotation.y += 0.1\n      }\n    })\n\n   \n\n\n      return (\n       \n          <mesh\n          {...fbx.children[0]}\n          ref={mesh}\n          position={[0, 0, 6]}\n          scale={[0.1,0.1,0.1]}\n          name=\"Object_0\"\n          rotation={[0, 0, 0]}\n          onClick={e=>click()}\n          onPointerOver={e => setHover(true)}\n          onPointerOut={e => setHover(false)}\n        >\n        </mesh>\n    \n      )\n  }\n\n\n  \n  const Scene = ({clickOne}) => {\n\n    return (\n      <Suspense callback={false}>\n          <FBX click={clickOne}/>\n        </Suspense>\n    )\n  }\n\n  const One = (clickOne={clickOne}) =>{\n    <Canvas>\n    <Camera position={[0, 0, 15]} />\n    <ambientLight intensity={1.0} />\n    <pointLight position={[40, 40, 40]} />\n    <Suspense fallback={null}> \n    <Scene clickOne={clickOne}/>\n    </Suspense>\n    </Canvas>\n  }\n\n  export default One "]},"metadata":{},"sourceType":"module"}